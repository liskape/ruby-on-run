
============= :__script__ ==============
Arguments:   0 required, 0 post, 0 total
Arity:       0
Locals:      0
Stack size:  4
Literals:    6: "instance", :require_relative, :Solver, :open_class, <compiled code>, :call_under
Lines to IP: 1: 0..8, 4: 9..27

0000:  push_self                  
0001:  push_literal               "instance"
0003:  string_dup                 
0004:  allow_private              
0005:  send_stack                 :require_relative, 1
0008:  pop                        
0009:  push_rubinius              
0010:  push_literal               :Solver
0012:  push_nil                   
0013:  push_scope                 
0014:  send_stack                 :open_class, 3
0017:  create_block               #<Rubinius::CompiledCode Solver file=solver.rb>
0019:  swap_stack                 
0020:  push_scope                 
0021:  push_true                  
0022:  send_stack                 :call_under, 3
0025:  pop                        
0026:  push_true                  
0027:  ret                        
----------------------------------------

=============== :Solver ================
Arguments:   0 required, 0 post, 0 total
Arity:       0
Locals:      0
Stack size:  5
Literals:    6: :solve, <compiled code>, :method_visibility, :add_defn_method, :try, <compiled code>
Lines to IP: 5: 2..15, 14: 16..29

0000:  push_self                  
0001:  add_scope                  
0002:  push_rubinius              
0003:  push_literal               :solve
0005:  push_literal               #<Rubinius::CompiledCode solve file=solver.rb>
0007:  push_scope                 
0008:  push_variables             
0009:  send_stack                 :method_visibility, 0
0012:  send_stack                 :add_defn_method, 4
0015:  pop                        
0016:  push_rubinius              
0017:  push_literal               :try
0019:  push_literal               #<Rubinius::CompiledCode try file=solver.rb>
0021:  push_scope                 
0022:  push_variables             
0023:  send_stack                 :method_visibility, 0
0026:  send_stack                 :add_defn_method, 4
0029:  ret                        
----------------------------------------

================ :solve ================
Arguments:   1 required, 0 post, 1 total
Arity:       1
Locals:      1: instance
Stack size:  4
Literals:    9: :@instance, :var_count, :**, :@max, :@solution, :@solved, :+, :try, :solved
Line:        5
Lines to IP: 6: 0..4, 7: 5..16, 8: 17..20, 9: 21..24, 10: 25..49, 0: 50..50, 11: 51..56

0000:  push_local                 0    # instance
0002:  set_ivar                   :@instance
0004:  pop                        
0005:  meta_push_2                
0006:  push_local                 0    # instance
0008:  send_stack                 :var_count, 0
0011:  send_stack                 :**, 1
0014:  set_ivar                   :@max
0016:  pop                        
0017:  meta_push_0                
0018:  set_ivar                   :@solution
0020:  pop                        
0021:  push_false                 
0022:  set_ivar                   :@solved
0024:  pop                        
0025:  push_self                  
0026:  push_ivar                  :@solution
0028:  meta_push_1                
0029:  send_stack                 :+, 1
0032:  meta_push_1                
0033:  allow_private              
0034:  send_stack                 :try, 2
0037:  goto_if_false              0042:
0039:  push_nil                   
0040:  goto                       0050:
0042:  push_self                  
0043:  push_ivar                  :@solution
0045:  meta_push_1                
0046:  allow_private              
0047:  send_stack                 :try, 2
0050:  pop                        
0051:  push_ivar                  :@instance
0053:  send_stack                 :solved, 0
0056:  ret                        
----------------------------------------

================= :try =================
Arguments:   2 required, 0 post, 2 total
Arity:       2
Locals:      4: solution, power, e, r
Stack size:  8
Literals:    20: "trying solution ", :to_s, :+, " / ", :@max, :p, :>=, "after first return ", :@instance, :evaluate_solution, "evaluation = ", :==, "after second return ", "instance size = ", :size, "after third return ", :**, :try, "result = ", "after fourth return "
Line:        14
Lines to IP: 15: 0..44, 16: 45..58, 0: 59..59, 17: 60..104, 18: 105..116, 19: 117..133, 20: 134..146, 0: 147..147, 21: 148..192, 22: 193..212, 23: 213..229, 0: 230..230, 24: 231..275, 25: 276..300, 26: 301..317, 27: 318..326, 0: 327..327, 28: 328..372, 29: 373..386

0000:  push_self                  
0001:  push_literal               "trying solution "
0003:  string_dup                 
0004:  push_local                 0    # solution
0006:  send_stack                 :to_s, 0
0009:  send_stack                 :+, 1
0012:  push_literal               " / "
0014:  string_dup                 
0015:  send_stack                 :+, 1
0018:  push_local                 1    # power
0020:  send_stack                 :to_s, 0
0023:  send_stack                 :+, 1
0026:  push_literal               " / "
0028:  string_dup                 
0029:  send_stack                 :+, 1
0032:  push_ivar                  :@max
0034:  send_stack                 :to_s, 0
0037:  send_stack                 :+, 1
0040:  allow_private              
0041:  send_stack                 :p, 1
0044:  pop                        
0045:  push_local                 0    # solution
0047:  push_ivar                  :@max
0049:  send_stack                 :>=, 1
0052:  goto_if_false              0058:
0054:  push_false                 
0055:  ret                        
0056:  goto                       0059:
0058:  push_nil                   
0059:  pop                        
0060:  push_self                  
0061:  push_literal               "after first return "
0063:  string_dup                 
0064:  push_local                 0    # solution
0066:  send_stack                 :to_s, 0
0069:  send_stack                 :+, 1
0072:  push_literal               " / "
0074:  string_dup                 
0075:  send_stack                 :+, 1
0078:  push_local                 1    # power
0080:  send_stack                 :to_s, 0
0083:  send_stack                 :+, 1
0086:  push_literal               " / "
0088:  string_dup                 
0089:  send_stack                 :+, 1
0092:  push_ivar                  :@max
0094:  send_stack                 :to_s, 0
0097:  send_stack                 :+, 1
0100:  allow_private              
0101:  send_stack                 :p, 1
0104:  pop                        
0105:  push_ivar                  :@instance
0107:  push_local                 0    # solution
0109:  push_local                 1    # power
0111:  send_stack                 :evaluate_solution, 2
0114:  set_local                  2    # e
0116:  pop                        
0117:  push_self                  
0118:  push_literal               "evaluation = "
0120:  string_dup                 
0121:  push_local                 2    # e
0123:  send_stack                 :to_s, 0
0126:  send_stack                 :+, 1
0129:  allow_private              
0130:  send_stack                 :p, 1
0133:  pop                        
0134:  push_local                 2    # e
0136:  meta_push_neg_1            
0137:  send_stack                 :==, 1
0140:  goto_if_false              0146:
0142:  push_false                 
0143:  ret                        
0144:  goto                       0147:
0146:  push_nil                   
0147:  pop                        
0148:  push_self                  
0149:  push_literal               "after second return "
0151:  string_dup                 
0152:  push_local                 0    # solution
0154:  send_stack                 :to_s, 0
0157:  send_stack                 :+, 1
0160:  push_literal               " / "
0162:  string_dup                 
0163:  send_stack                 :+, 1
0166:  push_local                 1    # power
0168:  send_stack                 :to_s, 0
0171:  send_stack                 :+, 1
0174:  push_literal               " / "
0176:  string_dup                 
0177:  send_stack                 :+, 1
0180:  push_ivar                  :@max
0182:  send_stack                 :to_s, 0
0185:  send_stack                 :+, 1
0188:  allow_private              
0189:  send_stack                 :p, 1
0192:  pop                        
0193:  push_self                  
0194:  push_literal               "instance size = "
0196:  string_dup                 
0197:  push_ivar                  :@instance
0199:  send_stack                 :size, 0
0202:  send_stack                 :to_s, 0
0205:  send_stack                 :+, 1
0208:  allow_private              
0209:  send_stack                 :p, 1
0212:  pop                        
0213:  push_local                 2    # e
0215:  push_ivar                  :@instance
0217:  send_stack                 :size, 0
0220:  send_stack                 :==, 1
0223:  goto_if_false              0229:
0225:  push_true                  
0226:  ret                        
0227:  goto                       0230:
0229:  push_nil                   
0230:  pop                        
0231:  push_self                  
0232:  push_literal               "after third return "
0234:  string_dup                 
0235:  push_local                 0    # solution
0237:  send_stack                 :to_s, 0
0240:  send_stack                 :+, 1
0243:  push_literal               " / "
0245:  string_dup                 
0246:  send_stack                 :+, 1
0249:  push_local                 1    # power
0251:  send_stack                 :to_s, 0
0254:  send_stack                 :+, 1
0257:  push_literal               " / "
0259:  string_dup                 
0260:  send_stack                 :+, 1
0263:  push_ivar                  :@max
0265:  send_stack                 :to_s, 0
0268:  send_stack                 :+, 1
0271:  allow_private              
0272:  send_stack                 :p, 1
0275:  pop                        
0276:  push_self                  
0277:  push_local                 0    # solution
0279:  meta_push_2                
0280:  push_local                 1    # power
0282:  send_stack                 :**, 1
0285:  send_stack                 :+, 1
0288:  push_local                 1    # power
0290:  meta_push_1                
0291:  send_stack                 :+, 1
0294:  allow_private              
0295:  send_stack                 :try, 2
0298:  set_local                  3    # r
0300:  pop                        
0301:  push_self                  
0302:  push_literal               "result = "
0304:  string_dup                 
0305:  push_local                 3    # r
0307:  send_stack                 :to_s, 0
0310:  send_stack                 :+, 1
0313:  allow_private              
0314:  send_stack                 :p, 1
0317:  pop                        
0318:  push_local                 3    # r
0320:  goto_if_false              0326:
0322:  push_true                  
0323:  ret                        
0324:  goto                       0327:
0326:  push_nil                   
0327:  pop                        
0328:  push_self                  
0329:  push_literal               "after fourth return "
0331:  string_dup                 
0332:  push_local                 0    # solution
0334:  send_stack                 :to_s, 0
0337:  send_stack                 :+, 1
0340:  push_literal               " / "
0342:  string_dup                 
0343:  send_stack                 :+, 1
0346:  push_local                 1    # power
0348:  send_stack                 :to_s, 0
0351:  send_stack                 :+, 1
0354:  push_literal               " / "
0356:  string_dup                 
0357:  send_stack                 :+, 1
0360:  push_ivar                  :@max
0362:  send_stack                 :to_s, 0
0365:  send_stack                 :+, 1
0368:  allow_private              
0369:  send_stack                 :p, 1
0372:  pop                        
0373:  push_self                  
0374:  push_local                 0    # solution
0376:  push_local                 1    # power
0378:  meta_push_1                
0379:  send_stack                 :+, 1
0382:  allow_private              
0383:  send_stack                 :try, 2
0386:  ret                        
----------------------------------------
